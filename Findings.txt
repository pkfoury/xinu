## Lab 2

The producer is initialized to count N because we are treating this as a "resources avalable" semaphore. We start with an empty buffer, therefore we have N available pockets to fill. The consumer is initialized to 0 so that it waits for the producer to signal that content is available. Once it is incremented to M, the consumer can consume M times before waiting again.

If the incrementer has prio 20 and monitor has prio 2000, it will not run 100 times more often since we use sleepms(). If we have two ready processes, one with higher priority and one with lower, the higher will be selected to run. However, since we are sleeping on the higher priority process for a longer amount of time, the higher priority process is sleeping by the time the next lower priority process is ready.

An incrementer process cannot be run when the monitor process is ready, since the momnitor process has a higher priority.
